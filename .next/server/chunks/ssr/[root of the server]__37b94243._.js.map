{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/crud/fetch/blogFetch.js"],"sourcesContent":["'use server';\n\n// ==============================\n// /app/crud/fetch/blogFetch.js\n// Handles GET and PUT requests to WordPress REST API for blog posts\n// ==============================\n\nimport blogDummyData from '../../dummy-data/blogDummyData.json';\nimport fs from 'fs/promises';\nimport path from 'path';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_WP;\nconst DUMMY_DATA_PATH = path.join(process.cwd(), 'app/dummy-data/blogDummyData.json');\n\nlet isUsingDummy = false;\n\n// ✅ Load all posts (WordPress first, fallback to dummy)\nexport async function fetchPosts() {\n  try {\n    const res = await fetch(`${API_URL}/wp/v2/posts?per_page=20`);\n    if (!res.ok) throw new Error('Failed to fetch WordPress posts');\n    const data = await res.json();\n    isUsingDummy = false;\n    return {\n      source: 'wp',\n      data\n    };\n  } catch (error) {\n    console.warn('[Fallback] Loading local dummy posts');\n    isUsingDummy = true;\n    return {\n      source: 'dummy',\n      data: blogDummyData\n    };\n  }\n}\n\n// ✅ Load single post by ID\nexport async function fetchPost(id) {\n  if (isUsingDummy) {\n    const found = blogDummyData.find((item) => item.id === id);\n    if (!found) throw new Error('Dummy post not found');\n    return found;\n  }\n\n  const res = await fetch(`${API_URL}/wp/v2/posts/${id}`);\n  if (!res.ok) throw new Error('Failed to fetch WordPress post');\n  return await res.json();\n}\n\n// ✅ Update a post (WordPress or dummy JSON file)\nexport async function updatePost(id, newData, token) {\n  if (isUsingDummy) {\n    try {\n      const index = blogDummyData.findIndex((v) => v.id === id);\n      if (index === -1) throw new Error('Dummy post not found');\n\n      const updated = {\n        ...blogDummyData[index],\n        title: { rendered: newData.title },\n        content: { rendered: newData.content }\n      };\n\n      blogDummyData[index] = updated;\n      await fs.writeFile(DUMMY_DATA_PATH, JSON.stringify(blogDummyData, null, 2));\n\n      return updated;\n    } catch (err) {\n      console.error(err);\n      throw new Error('Failed to update dummy post');\n    }\n  }\n\n  const res = await fetch(`${API_URL}/wp/v2/posts/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(newData)\n  });\n\n  if (!res.ok) throw new Error('Failed to update WordPress post');\n  return await res.json();\n}\n"],"names":[],"mappings":";;;;;;;AAEA,iCAAiC;AACjC,+BAA+B;AAC/B,oEAAoE;AACpE,iCAAiC;AAEjC;AACA;AACA;;;;;;;AAEA,MAAM;AACN,MAAM,kBAAkB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAEjD,IAAI,eAAe;AAGZ,eAAe,uCAAQ,GAAR;IACpB,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,wBAAwB,CAAC;QAC5D,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAC7B,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,eAAe;QACf,OAAO;YACL,QAAQ;YACR;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC;QACb,eAAe;QACf,OAAO;YACL,QAAQ;YACR,MAAM,6GAAA,CAAA,UAAa;QACrB;IACF;AACF;AAGO,eAAe,uCAAO,GAAP,UAAU,EAAE;IAChC,IAAI,cAAc;QAChB,MAAM,QAAQ,6GAAA,CAAA,UAAa,CAAC,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;QACvD,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;QAC5B,OAAO;IACT;IAEA,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,IAAI;IACtD,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;AAGO,eAAe,uCAAQ,GAAR,WAAW,EAAE,EAAE,OAAO,EAAE,KAAK;IACjD,IAAI,cAAc;QAChB,IAAI;YACF,MAAM,QAAQ,6GAAA,CAAA,UAAa,CAAC,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;YACtD,IAAI,UAAU,CAAC,GAAG,MAAM,IAAI,MAAM;YAElC,MAAM,UAAU;gBACd,GAAG,6GAAA,CAAA,UAAa,CAAC,MAAM;gBACvB,OAAO;oBAAE,UAAU,QAAQ,KAAK;gBAAC;gBACjC,SAAS;oBAAE,UAAU,QAAQ,OAAO;gBAAC;YACvC;YAEA,6GAAA,CAAA,UAAa,CAAC,MAAM,GAAG;YACvB,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,iBAAiB,KAAK,SAAS,CAAC,6GAAA,CAAA,UAAa,EAAE,MAAM;YAExE,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC;YACd,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,IAAI,EAAE;QACtD,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,eAAe,CAAC,OAAO,EAAE,OAAO;QAClC;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;;;IAnEsB;IAqBA;IAaA;;AAlCA,+OAAA;AAqBA,+OAAA;AAaA,+OAAA","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/crud/fetch/videoFetch.js"],"sourcesContent":["// app/crud/fetch/videoFetch.js\n'use server';\n\nimport videoDummyData from '../../dummy-data/videoDummyData.json';\nimport fs from 'fs/promises';\nimport path from 'path';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_WP;\nconst DUMMY_DATA_PATH = path.join(process.cwd(), 'app/dummy-data/videoDummyData.json');\n\nlet isUsingDummy = false;\n\n// ✅ Load all videos (WordPress first, fallback to dummy)\nexport async function fetchVideos() {\n  try {\n    const res = await fetch(`${API_URL}/wp/v2/films?per_page=20`);\n    if (!res.ok) throw new Error('Failed to fetch WordPress films');\n    const data = await res.json();\n    isUsingDummy = false;\n    return data;\n  } catch (error) {\n    console.warn('[Fallback] Loading local dummy videos');\n    isUsingDummy = true;\n    return videoDummyData;\n  }\n}\n\n// ✅ Load single video by ID\nexport async function fetchVideo(id) {\n  if (isUsingDummy) {\n    const found = videoDummyData.find((item) => item.id === id);\n    if (!found) throw new Error('Dummy video not found');\n    return found;\n  }\n\n  const res = await fetch(`${API_URL}/wp/v2/films/${id}`);\n  if (!res.ok) throw new Error('Failed to fetch WordPress video');\n  return await res.json();\n}\n\n// ✅ Update a video (WordPress or dummy JSON file)\nexport async function updateVideo(id, newData, token) {\n  if (isUsingDummy) {\n    try {\n      const index = videoDummyData.findIndex((v) => v.id === id);\n      if (index === -1) throw new Error('Dummy video not found');\n\n      const updated = {\n        ...videoDummyData[index],\n        title: { rendered: newData.title },\n        content: { rendered: newData.content }\n      };\n\n      videoDummyData[index] = updated;\n      await fs.writeFile(DUMMY_DATA_PATH, JSON.stringify(videoDummyData, null, 2));\n\n      return updated;\n    } catch (err) {\n      console.error(err);\n      throw new Error('Failed to update dummy video');\n    }\n  }\n\n  const res = await fetch(`${API_URL}/wp/v2/films/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(newData)\n  });\n\n  if (!res.ok) throw new Error('Failed to update WordPress video');\n  return await res.json();\n}\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;;;;AAG/B;AACA;AACA;;;;;;;AAEA,MAAM;AACN,MAAM,kBAAkB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAEjD,IAAI,eAAe;AAGZ,eAAe,uCAAS,GAAT;IACpB,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,wBAAwB,CAAC;QAC5D,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAC7B,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,eAAe;QACf,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,IAAI,CAAC;QACb,eAAe;QACf,OAAO,8GAAA,CAAA,UAAc;IACvB;AACF;AAGO,eAAe,uCAAQ,GAAR,WAAW,EAAE;IACjC,IAAI,cAAc;QAChB,MAAM,QAAQ,8GAAA,CAAA,UAAc,CAAC,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;QACxD,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;QAC5B,OAAO;IACT;IAEA,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,IAAI;IACtD,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;AAGO,eAAe,uCAAS,GAAT,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK;IAClD,IAAI,cAAc;QAChB,IAAI;YACF,MAAM,QAAQ,8GAAA,CAAA,UAAc,CAAC,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;YACvD,IAAI,UAAU,CAAC,GAAG,MAAM,IAAI,MAAM;YAElC,MAAM,UAAU;gBACd,GAAG,8GAAA,CAAA,UAAc,CAAC,MAAM;gBACxB,OAAO;oBAAE,UAAU,QAAQ,KAAK;gBAAC;gBACjC,SAAS;oBAAE,UAAU,QAAQ,OAAO;gBAAC;YACvC;YAEA,8GAAA,CAAA,UAAc,CAAC,MAAM,GAAG;YACxB,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,iBAAiB,KAAK,SAAS,CAAC,8GAAA,CAAA,UAAc,EAAE,MAAM;YAEzE,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC;YACd,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,IAAI,EAAE;QACtD,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,eAAe,CAAC,OAAO,EAAE,OAAO;QAClC;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;;;IA7DsB;IAeA;IAaA;;AA5BA,+OAAA;AAeA,+OAAA;AAaA,+OAAA","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/crud/fetch/audioFetch.js"],"sourcesContent":["'use server'\n\n// ==============================\n// /app/crud/fetch/audioFetch.js\n// Handles GET and PUT requests to WordPress REST API for audio posts\n// ==============================\nconst API_URL = process.env.NEXT_PUBLIC_API_WP;\n\n\n// Fetch all audio posts\nexport async function fetchAudios() {\n  const res = await fetch(`${API_URL}/wp/v2/audio?per_page=20`);\n  if (!res.ok) throw new Error('Failed to fetch posts');\n  return await res.json();\n}\n\n// Fetch a single audio post by ID\nexport async function fetchAudio(id) {\n  const res = await fetch(`${API_URL}/wp/v2/audio/${id}`);\n  if (!res.ok) throw new Error('Failed to fetch single post');\n  return await res.json();\n}\n\n// Update a audio post using JWT token\nexport async function updateAudio(id, data, token) {\n  const res = await fetch(`${API_URL}/wp/v2/audio/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error('Failed to update post');\n  return await res.json();\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA,iCAAiC;AACjC,gCAAgC;AAChC,qEAAqE;AACrE,iCAAiC;AACjC,MAAM;AAIC,eAAe,uCAAS,GAAT;IACpB,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,wBAAwB,CAAC;IAC5D,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;AAGO,eAAe,uCAAQ,GAAR,WAAW,EAAE;IACjC,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,IAAI;IACtD,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;AAGO,eAAe,uCAAS,GAAT,YAAY,EAAE,EAAE,IAAI,EAAE,KAAK;IAC/C,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,IAAI,EAAE;QACtD,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,eAAe,CAAC,OAAO,EAAE,OAAO;QAClC;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;;;IAzBsB;IAOA;IAOA;;AAdA,+OAAA;AAOA,+OAAA;AAOA,+OAAA","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/crud/fetch/artworkFetch.js"],"sourcesContent":["'use server'\n\n// ==============================\n// /app/crud/fetch/artworkFetch.js\n// Handles GET and PUT requests to WordPress REST API for artwork posts\n// ==============================\nconst API_URL = process.env.NEXT_PUBLIC_API_WP;\n\n\n// Fetch all artwork posts\nexport async function fetchArtworks() {\n  const res = await fetch(`${API_URL}/wp/v2/2dart?per_page=20`);\n  if (!res.ok) throw new Error('Failed to fetch posts');\n  return await res.json();\n}\n\n// Fetch a single artwork post by ID\nexport async function fetchArtwork(id) {\n  const res = await fetch(`${API_URL}/wp/v2/2dart/${id}`);\n  if (!res.ok) throw new Error('Failed to fetch single post');\n  return await res.json();\n}\n\n// Update a artwork post using JWT token\nexport async function updateArtwork(id, data, token) {\n  const res = await fetch(`${API_URL}/wp/v2/2dart/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error('Failed to update post');\n  return await res.json();\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA,iCAAiC;AACjC,kCAAkC;AAClC,uEAAuE;AACvE,iCAAiC;AACjC,MAAM;AAIC,eAAe,uCAAW,GAAX;IACpB,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,wBAAwB,CAAC;IAC5D,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;AAGO,eAAe,uCAAU,GAAV,aAAa,EAAE;IACnC,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,IAAI;IACtD,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;AAGO,eAAe,uCAAW,GAAX,cAAc,EAAE,EAAE,IAAI,EAAE,KAAK;IACjD,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,IAAI,EAAE;QACtD,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,eAAe,CAAC,OAAO,EAAE,OAAO;QAClC;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;;;IAzBsB;IAOA;IAOA;;AAdA,+OAAA;AAOA,+OAAA;AAOA,+OAAA","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/crud/fetch/photographyFetch.js"],"sourcesContent":["'use server'\n\n// ==============================\n// /app/crud/fetch/photoFetch.js\n// Handles GET and PUT requests to WordPress REST API for photo posts\n// ==============================\nconst API_URL = process.env.NEXT_PUBLIC_API_WP;\n\n\n// Fetch all photo posts\nexport async function fetchPhotos() {\n  const res = await fetch(`${API_URL}/wp/v2/photos?per_page=20`);\n  if (!res.ok) throw new Error('Failed to fetch posts');\n  return await res.json();\n}\n\n// Fetch a single photo post by ID\nexport async function fetchPhoto(id) {\n  const res = await fetch(`${API_URL}/wp/v2/photos/${id}`);\n  if (!res.ok) throw new Error('Failed to fetch single post');\n  return await res.json();\n}\n\n// Update a photo post using JWT token\nexport async function updatePhoto(id, data, token) {\n  const res = await fetch(`${API_URL}/wp/v2/photos/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error('Failed to update post');\n  return await res.json();\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA,iCAAiC;AACjC,gCAAgC;AAChC,qEAAqE;AACrE,iCAAiC;AACjC,MAAM;AAIC,eAAe,uCAAS,GAAT;IACpB,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,yBAAyB,CAAC;IAC7D,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;AAGO,eAAe,uCAAQ,GAAR,WAAW,EAAE;IACjC,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,cAAc,EAAE,IAAI;IACvD,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;AAGO,eAAe,uCAAS,GAAT,YAAY,EAAE,EAAE,IAAI,EAAE,KAAK;IAC/C,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,cAAc,EAAE,IAAI,EAAE;QACvD,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,eAAe,CAAC,OAAO,EAAE,OAAO;QAClC;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;;;IAzBsB;IAOA;IAOA;;AAdA,+OAAA;AAOA,+OAAA;AAOA,+OAAA","debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/crud/fetch/models3dFetch.js"],"sourcesContent":["'use server'\n\n// ==============================\n// /app/crud/fetch/models3dFetch.js\n// Handles GET and PUT requests to WordPress REST API for models3d posts\n// ==============================\nconst API_URL = process.env.NEXT_PUBLIC_API_WP;\n\n\n// Fetch all models3d posts\nexport async function fetch3ds() {\n  const res = await fetch(`${API_URL}/wp/v2/3dart?per_page=20`);\n  if (!res.ok) throw new Error('Failed to fetch posts');\n  return await res.json();\n}\n\n// Fetch a single models3d post by ID\nexport async function fetch3d(id) {\n  const res = await fetch(`${API_URL}/wp/v2/3dart/${id}`);\n  if (!res.ok) throw new Error('Failed to fetch single post');\n  return await res.json();\n}\n\n// Update a models3d post using JWT token\nexport async function update3d(id, data, token) {\n  const res = await fetch(`${API_URL}/wp/v2/3dart/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error('Failed to update post');\n  return await res.json();\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA,iCAAiC;AACjC,mCAAmC;AACnC,wEAAwE;AACxE,iCAAiC;AACjC,MAAM;AAIC,eAAe,uCAAM,GAAN;IACpB,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,wBAAwB,CAAC;IAC5D,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;AAGO,eAAe,uCAAK,GAAL,QAAQ,EAAE;IAC9B,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,IAAI;IACtD,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;AAGO,eAAe,uCAAM,GAAN,SAAS,EAAE,EAAE,IAAI,EAAE,KAAK;IAC5C,MAAM,MAAM,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,IAAI,EAAE;QACtD,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,eAAe,CAAC,OAAO,EAAE,OAAO;QAClC;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IACA,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,MAAM,IAAI,IAAI;AACvB;;;IAzBsB;IAOA;IAOA;;AAdA,+OAAA;AAOA,+OAAA;AAOA,+OAAA","debugId":null}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/crud/page.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/crud/page.js <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/crud/page.js <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/crud/page.js/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/crud/page.js from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/crud/page.js\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}