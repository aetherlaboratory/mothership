{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/media/MediaManager/MediaManagerProvider.js"],"sourcesContent":["// File: /app/components/global/MediaManager/MediaManagerProvider.js\n// Description: Context provider to control global media modal state, selection, and interaction\n\n'use client'\n\nimport React, { createContext, useState, useCallback } from 'react'\n\n// Context object used by the modal and trigger components\nexport const MediaManagerContext = createContext()\n\n// Provider component to wrap app or page\nexport function MediaManagerProvider({ children }) {\n  const [isOpen, setIsOpen] = useState(false)           // Modal visibility\n  const [selectedMedia, setSelectedMedia] = useState(null) // Selected media object\n\n  // Open modal\n  const openModal = useCallback(() => setIsOpen(true), [])\n\n  // Close modal and clear selection\n  const closeModal = useCallback(() => {\n    setIsOpen(false)\n    setSelectedMedia(null)\n  }, [])\n\n  // Select a media item\n  const selectMedia = useCallback((media) => {\n    setSelectedMedia(media)\n  }, [])\n\n  return (\n    <MediaManagerContext.Provider\n      value={{\n        isOpen,\n        openModal,\n        closeModal,\n        selectedMedia,\n        selectMedia,\n      }}\n    >\n      {children}\n    </MediaManagerContext.Provider>\n  )\n}\n"],"names":[],"mappings":"AAAA,oEAAoE;AACpE,gGAAgG;;;;;;AAIhG;AAFA;;;AAKO,MAAM,oCAAsB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD;AAGxC,SAAS,qBAAqB,EAAE,QAAQ,EAAE;IAC/C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAiB,mBAAmB;;IACzE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,wBAAwB;;IAEjF,aAAa;IACb,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,IAAM,UAAU,OAAO,EAAE;IAEvD,kCAAkC;IAClC,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,UAAU;QACV,iBAAiB;IACnB,GAAG,EAAE;IAEL,sBAAsB;IACtB,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC/B,iBAAiB;IACnB,GAAG,EAAE;IAEL,qBACE,8OAAC,oBAAoB,QAAQ;QAC3B,OAAO;YACL;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/media/MediaManager/MediaManagerTrigger.js"],"sourcesContent":["// File: /app/components/global/MediaManager/MediaManagerTrigger.js\n// Description: Trigger component to open the global media manager modal anywhere in the app\n\n'use client'\n\nimport React, { useContext } from 'react'\nimport { MediaManagerContext } from './MediaManagerProvider'\n\n// Props allow reuse with different buttons/styles\nexport function MediaManagerTrigger({ children, className = '' }) {\n  const { openModal } = useContext(MediaManagerContext)\n\n  return (\n    <button\n      onClick={openModal}\n      className={className || 'bg-blue-600 text-white px-4 py-2 rounded-md'}\n    >\n      {children || 'Open Media Manager'}\n    </button>\n  )\n}\n"],"names":[],"mappings":"AAAA,mEAAmE;AACnE,4FAA4F;;;;;AAI5F;AACA;AAHA;;;;AAMO,SAAS,oBAAoB,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE;IAC9D,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,oJAAA,CAAA,sBAAmB;IAEpD,qBACE,8OAAC;QACC,SAAS;QACT,WAAW,aAAa;kBAEvB,YAAY;;;;;;AAGnB","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/media/mediaActions.js"],"sourcesContent":["// File: /app/media/mediaActions.js\n// Description: WordPress Media API helper functions using JWT auth from a \"service account\" (admin user login)\n\n// Dependencies\nimport axios from 'axios'\n\n// WordPress API base and endpoint\nconst WP_API_BASE = process.env.NEXT_PUBLIC_API_WP\nconst WP_MEDIA_ENDPOINT = `${WP_API_BASE}/wp/v2/media`\nconst WP_JWT_ENDPOINT = `${WP_API_BASE}/jwt-auth/v1/token`\n\n// 🔐 Generate JWT token from service account credentials (admin user from .env)\nconst getServiceJWT = async () => {\n  try {\n    const res = await axios.post(WP_JWT_ENDPOINT, {\n      username: process.env.NEXT_PUBLIC_WP_ADMIN_USERNAME,\n      password: process.env.NEXT_PUBLIC_WP_ADMIN_PASSWORD,\n    })\n\n    return res.data?.token\n  } catch (err) {\n    console.error('❌ Failed to get service JWT token:', err.response?.data || err.message)\n    throw new Error('JWT generation failed')\n  }\n}\n\n// 🔍 GET all media items from WordPress (pagination/search supported)\nexport const getAllMedia = async (params = {}) => {\n  try {\n    const token = await getServiceJWT()\n\n    const res = await axios.get(WP_MEDIA_ENDPOINT, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      params,\n    })\n\n    return res.data\n  } catch (err) {\n    console.error('❌ Error fetching media:', err)\n    return []\n  }\n}\n\n// ⬆️ Upload new media file (image, video, audio, etc.)\nexport const uploadMedia = async (file) => {\n  const token = await getServiceJWT()\n\n  if (!token) throw new Error('JWT token not available')\n\n  const formData = new FormData()\n  formData.append('file', file)\n  formData.append('title', file.name)\n\n  try {\n    const res = await axios.post(WP_MEDIA_ENDPOINT, formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Disposition': `attachment; filename=\"${file.name}\"`,\n        'Content-Type': file.type,\n      },\n    })\n\n    return res.data\n  } catch (err) {\n    console.error('❌ Upload error:', err.response?.data || err.message)\n    throw err\n  }\n}\n\n// 🗑️ DELETE media by ID\nexport const deleteMedia = async (mediaId) => {\n  try {\n    const token = await getServiceJWT()\n\n    const res = await axios.delete(`${WP_MEDIA_ENDPOINT}/${mediaId}?force=true`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n\n    return res.data\n  } catch (err) {\n    console.error('❌ Delete error:', err.response?.data || err.message)\n    throw err\n  }\n}\n\n// ✏️ Update media item details (title, alt, caption, etc.)\nexport const updateMedia = async (mediaId, data = {}) => {\n  try {\n    const token = await getServiceJWT()\n\n    const res = await axios.post(`${WP_MEDIA_ENDPOINT}/${mediaId}`, data, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    })\n\n    return res.data\n  } catch (err) {\n    console.error('❌ Update error:', err.response?.data || err.message)\n    throw err\n  }\n}\n"],"names":[],"mappings":"AAAA,mCAAmC;AACnC,+GAA+G;AAE/G,eAAe;;;;;;;AACf;;AAEA,kCAAkC;AAClC,MAAM;AACN,MAAM,oBAAoB,GAAG,YAAY,YAAY,CAAC;AACtD,MAAM,kBAAkB,GAAG,YAAY,kBAAkB,CAAC;AAE1D,gFAAgF;AAChF,MAAM,gBAAgB;IACpB,IAAI;QACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,iBAAiB;YAC5C,QAAQ;YACR,QAAQ;QACV;QAEA,OAAO,IAAI,IAAI,EAAE;IACnB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,sCAAsC,IAAI,QAAQ,EAAE,QAAQ,IAAI,OAAO;QACrF,MAAM,IAAI,MAAM;IAClB;AACF;AAGO,MAAM,cAAc,OAAO,SAAS,CAAC,CAAC;IAC3C,IAAI;QACF,MAAM,QAAQ,MAAM;QAEpB,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,mBAAmB;YAC7C,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,OAAO;YAClC;YACA;QACF;QAEA,OAAO,IAAI,IAAI;IACjB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,EAAE;IACX;AACF;AAGO,MAAM,cAAc,OAAO;IAChC,MAAM,QAAQ,MAAM;IAEpB,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;IAE5B,MAAM,WAAW,IAAI;IACrB,SAAS,MAAM,CAAC,QAAQ;IACxB,SAAS,MAAM,CAAC,SAAS,KAAK,IAAI;IAElC,IAAI;QACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,mBAAmB,UAAU;YACxD,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,OAAO;gBAChC,uBAAuB,CAAC,sBAAsB,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC5D,gBAAgB,KAAK,IAAI;YAC3B;QACF;QAEA,OAAO,IAAI,IAAI;IACjB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,mBAAmB,IAAI,QAAQ,EAAE,QAAQ,IAAI,OAAO;QAClE,MAAM;IACR;AACF;AAGO,MAAM,cAAc,OAAO;IAChC,IAAI;QACF,MAAM,QAAQ,MAAM;QAEpB,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,GAAG,kBAAkB,CAAC,EAAE,QAAQ,WAAW,CAAC,EAAE;YAC3E,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,OAAO;YAClC;QACF;QAEA,OAAO,IAAI,IAAI;IACjB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,mBAAmB,IAAI,QAAQ,EAAE,QAAQ,IAAI,OAAO;QAClE,MAAM;IACR;AACF;AAGO,MAAM,cAAc,OAAO,SAAS,OAAO,CAAC,CAAC;IAClD,IAAI;QACF,MAAM,QAAQ,MAAM;QAEpB,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,kBAAkB,CAAC,EAAE,SAAS,EAAE,MAAM;YACpE,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,OAAO;gBAChC,gBAAgB;YAClB;QACF;QAEA,OAAO,IAAI,IAAI;IACjB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,mBAAmB,IAAI,QAAQ,EAAE,QAAQ,IAAI,OAAO;QAClE,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/media/MediaManager/MediaItemCard.js"],"sourcesContent":["// File: /app/components/global/MediaManager/MediaItemCard.js\n// Description: Displays individual media item with thumbnail and actions (insert, delete, etc.)\n\n'use client'\n\nimport React, { useContext } from 'react'\nimport { MediaManagerContext } from './MediaManagerProvider'\nimport { deleteMedia } from '@/app/media/mediaActions'\nimport { Trash2, Image as ImageIcon, File } from 'lucide-react'\n\n// Render logic for media thumbnails\nconst getMediaPreview = (media) => {\n  if (media.media_type === 'image') {\n    return (\n      <img\n        src={media.source_url}\n        alt={media.alt_text || media.title.rendered}\n        className=\"w-full h-28 object-cover rounded-md\"\n      />\n    )\n  }\n\n  if (media.media_type === 'file') {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-28 bg-gray-50 rounded-md\">\n        <File className=\"w-6 h-6 text-gray-400\" />\n        <p className=\"text-xs text-gray-500 mt-1 truncate max-w-[90%]\">\n          {media.title.rendered}\n        </p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex items-center justify-center h-28 bg-gray-100 rounded-md\">\n      <ImageIcon className=\"w-6 h-6 text-gray-400\" />\n    </div>\n  )\n}\n\n// Card component for each media item\nexport default function MediaItemCard({ media }) {\n  const { selectMedia } = useContext(MediaManagerContext)\n\n  const handleInsert = () => {\n    selectMedia(media)\n    console.log('📌 Media selected:', media)\n  }\n\n  const handleDelete = async () => {\n    if (confirm('Are you sure you want to delete this file?')) {\n      try {\n        await deleteMedia(media.id)\n        alert('Media deleted. Refresh to update.')\n      } catch (err) {\n        alert('Failed to delete media.')\n      }\n    }\n  }\n\n  return (\n    <div className=\"relative group border rounded-md shadow-sm overflow-hidden hover:shadow-md transition\">\n      {/* Media Preview */}\n      {getMediaPreview(media)}\n\n      {/* Action buttons (Insert & Delete) */}\n      <div className=\"absolute top-1 right-1 flex gap-1 opacity-0 group-hover:opacity-100 transition\">\n        <button\n          onClick={handleInsert}\n          className=\"text-xs bg-green-600 text-white px-2 py-1 rounded hover:bg-green-700\"\n        >\n          Insert\n        </button>\n        <button\n          onClick={handleDelete}\n          className=\"text-xs bg-red-600 text-white px-2 py-1 rounded hover:bg-red-700\"\n        >\n          <Trash2 className=\"w-4 h-4\" />\n        </button>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,gGAAgG;;;;;AAIhG;AACA;AACA;AACA;AAAA;AAAA;AALA;;;;;;AAOA,oCAAoC;AACpC,MAAM,kBAAkB,CAAC;IACvB,IAAI,MAAM,UAAU,KAAK,SAAS;QAChC,qBACE,8OAAC;YACC,KAAK,MAAM,UAAU;YACrB,KAAK,MAAM,QAAQ,IAAI,MAAM,KAAK,CAAC,QAAQ;YAC3C,WAAU;;;;;;IAGhB;IAEA,IAAI,MAAM,UAAU,KAAK,QAAQ;QAC/B,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC,kMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;8BAChB,8OAAC;oBAAE,WAAU;8BACV,MAAM,KAAK,CAAC,QAAQ;;;;;;;;;;;;IAI7B;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,oMAAA,CAAA,QAAS;YAAC,WAAU;;;;;;;;;;;AAG3B;AAGe,SAAS,cAAc,EAAE,KAAK,EAAE;IAC7C,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,oJAAA,CAAA,sBAAmB;IAEtD,MAAM,eAAe;QACnB,YAAY;QACZ,QAAQ,GAAG,CAAC,sBAAsB;IACpC;IAEA,MAAM,eAAe;QACnB,IAAI,QAAQ,+CAA+C;YACzD,IAAI;gBACF,MAAM,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD,EAAE,MAAM,EAAE;gBAC1B,MAAM;YACR,EAAE,OAAO,KAAK;gBACZ,MAAM;YACR;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;YAEZ,gBAAgB;0BAGjB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;kCAGD,8OAAC;wBACC,SAAS;wBACT,WAAU;kCAEV,cAAA,8OAAC,0MAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAK5B","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/media/MediaManager/MediaGrid.js"],"sourcesContent":["// File: /app/components/global/MediaManager/MediaGrid.js\n// Description: Fetches and displays a grid of media items from WordPress\n\n'use client'\n\nimport React, { useEffect, useState } from 'react'\nimport { getAllMedia } from '@/app/media/mediaActions'\nimport MediaItemCard from './MediaItemCard'\n\n// Displays the media library grid\nexport default function MediaGrid() {\n  const [media, setMedia] = useState([])     // Fetched media list\n  const [loading, setLoading] = useState(true)\n\n  // Load media on component mount\n  useEffect(() => {\n    const loadMedia = async () => {\n      setLoading(true)\n      try {\n        const mediaItems = await getAllMedia({ per_page: 40 }) // Optional: add filters\n        setMedia(mediaItems)\n      } catch (err) {\n        console.error('Failed to load media', err)\n      }\n      setLoading(false)\n    }\n\n    loadMedia()\n  }, [])\n\n  return (\n    <div>\n      {/* Loading state */}\n      {loading && <p className=\"text-sm text-gray-500\">Loading media...</p>}\n\n      {/* Empty state */}\n      {!loading && media.length === 0 && (\n        <p className=\"text-sm text-gray-500\">No media found.</p>\n      )}\n\n      {/* Media grid */}\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\">\n        {media.map((item) => (\n          <MediaItemCard key={item.id} media={item} />\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"AAAA,yDAAyD;AACzD,yEAAyE;;;;;AAIzE;AACA;AACA;AAJA;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE,EAAM,qBAAqB;;IAChE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,gCAAgC;IAChC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,WAAW;YACX,IAAI;gBACF,MAAM,aAAa,MAAM,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD,EAAE;oBAAE,UAAU;gBAAG,GAAG,wBAAwB;;gBAC/E,SAAS;YACX,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,wBAAwB;YACxC;YACA,WAAW;QACb;QAEA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;;YAEE,yBAAW,8OAAC;gBAAE,WAAU;0BAAwB;;;;;;YAGhD,CAAC,WAAW,MAAM,MAAM,KAAK,mBAC5B,8OAAC;gBAAE,WAAU;0BAAwB;;;;;;0BAIvC,8OAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,6IAAA,CAAA,UAAa;wBAAe,OAAO;uBAAhB,KAAK,EAAE;;;;;;;;;;;;;;;;AAKrC","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/hooks/useMediaManager.js"],"sourcesContent":["// File: /app/hooks/useMediaManager.js\n// Description: Hook to access media manager modal state and selected media\n\n'use client'\n\nimport { useContext } from 'react'\nimport { MediaManagerContext } from '@/app/media/MediaManager/MediaManagerProvider'\n\n// Custom hook to simplify access to media manager context\nexport const useMediaManager = () => {\n  const context = useContext(MediaManagerContext)\n\n  if (!context) {\n    throw new Error('useMediaManager must be used within a MediaManagerProvider')\n  }\n\n  return context\n}\n"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,2EAA2E;;;;AAI3E;AACA;AAHA;;;AAMO,MAAM,kBAAkB;IAC7B,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,oJAAA,CAAA,sBAAmB;IAE9C,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/media/MediaManager/MediaUploadDropzone.js"],"sourcesContent":["// File: /app/components/global/MediaManager/MediaUploadDropzone.js\n// Description: Upload media and refresh the media grid on success\n\n'use client'\n\nimport React, { useCallback, useState } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { uploadMedia } from '@/app/media/mediaActions'\nimport { useMediaManager } from '@/app/hooks/useMediaManager'\nimport { UploadCloud } from 'lucide-react'\n\nexport default function MediaUploadDropzone() {\n  const [uploading, setUploading] = useState(false)\n  const [message, setMessage] = useState('')\n  const [uploadedItems, setUploadedItems] = useState([])\n\n  // Access global media manager context\n  const { refreshMediaLibrary } = useMediaManager()\n\n  // On file drop\n  const onDrop = useCallback(async (acceptedFiles) => {\n    setUploading(true)\n    setMessage('')\n    setUploadedItems([])\n\n    for (const file of acceptedFiles) {\n      try {\n        const uploaded = await uploadMedia(file)\n        console.log('✅ Uploaded:', uploaded)\n        setUploadedItems((prev) => [...prev, uploaded])\n      } catch (err) {\n        console.error('❌ Upload failed:', err)\n        setMessage(`Failed to upload ${file.name}`)\n      }\n    }\n\n    // Optionally notify user\n    setMessage('Upload complete.')\n    setUploading(false)\n\n    // Refresh global media list\n    if (refreshMediaLibrary) refreshMediaLibrary()\n  }, [refreshMediaLibrary])\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': [],\n      'video/*': [],\n      'audio/*': [],\n      'application/pdf': [],\n    },\n    multiple: true,\n  })\n\n  return (\n    <div\n      {...getRootProps()}\n      className={`border-2 border-dashed p-6 text-center rounded-lg transition cursor-pointer\n      ${isDragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300 bg-white'}`}\n    >\n      <input {...getInputProps()} />\n\n      <div className=\"flex justify-center mb-2\">\n        <UploadCloud className=\"w-8 h-8 text-blue-500\" />\n      </div>\n\n      <p className=\"text-sm text-gray-600\">\n        Drag and drop files here, or click to select files.\n      </p>\n\n      {uploading && (\n        <p className=\"mt-2 text-blue-600 text-sm animate-pulse\">Uploading...</p>\n      )}\n\n      {message && !uploading && (\n        <p className=\"mt-2 text-green-600 text-sm\">{message}</p>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"AAAA,mEAAmE;AACnE,kEAAkE;;;;;AAIlE;AACA;AAAA;AACA;AACA;AACA;AANA;;;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAErD,sCAAsC;IACtC,MAAM,EAAE,mBAAmB,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,kBAAe,AAAD;IAE9C,eAAe;IACf,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,OAAO;QAChC,aAAa;QACb,WAAW;QACX,iBAAiB,EAAE;QAEnB,KAAK,MAAM,QAAQ,cAAe;YAChC,IAAI;gBACF,MAAM,WAAW,MAAM,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD,EAAE;gBACnC,QAAQ,GAAG,CAAC,eAAe;gBAC3B,iBAAiB,CAAC,OAAS;2BAAI;wBAAM;qBAAS;YAChD,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,oBAAoB;gBAClC,WAAW,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;YAC5C;QACF;QAEA,yBAAyB;QACzB,WAAW;QACX,aAAa;QAEb,4BAA4B;QAC5B,IAAI,qBAAqB;IAC3B,GAAG;QAAC;KAAoB;IAExB,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,wKAAA,CAAA,cAAW,AAAD,EAAE;QAChE;QACA,QAAQ;YACN,WAAW,EAAE;YACb,WAAW,EAAE;YACb,WAAW,EAAE;YACb,mBAAmB,EAAE;QACvB;QACA,UAAU;IACZ;IAEA,qBACE,8OAAC;QACE,GAAG,cAAc;QAClB,WAAW,CAAC;MACZ,EAAE,eAAe,+BAA+B,4BAA4B;;0BAE5E,8OAAC;gBAAO,GAAG,eAAe;;;;;;0BAE1B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;0BAGzB,8OAAC;gBAAE,WAAU;0BAAwB;;;;;;YAIpC,2BACC,8OAAC;gBAAE,WAAU;0BAA2C;;;;;;YAGzD,WAAW,CAAC,2BACX,8OAAC;gBAAE,WAAU;0BAA+B;;;;;;;;;;;;AAIpD","debugId":null}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/media/MediaManager/MediaManagerModal.js"],"sourcesContent":["// File: /app/components/global/MediaManager/MediaManagerModal.js\n// Description: Main modal component that displays the media library UI and upload system\n\n'use client'\n\nimport React, { useContext } from 'react'\nimport { Dialog } from '@headlessui/react'\nimport { X } from 'lucide-react'\nimport { MediaManagerContext } from './MediaManagerProvider'\nimport MediaGrid from './MediaGrid'\nimport MediaUploadDropzone from './MediaUploadDropzone'\n\n// Main modal component using Headless UI <Dialog>\nexport function MediaManagerModal() {\n  const { isOpen, closeModal } = useContext(MediaManagerContext)\n\n  if (!isOpen) return null\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={closeModal}\n      className=\"fixed inset-0 z-50 flex items-center justify-center\"\n    >\n      {/* Overlay */}\n      <div className=\"fixed inset-0 bg-black/40 backdrop-blur-sm\" />\n\n      {/* Modal container */}\n      <div className=\"relative z-50 w-full max-w-6xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\n        {/* Modal header */}\n        <div className=\"flex justify-between items-center p-4 border-b bg-gray-100\">\n          <h2 className=\"text-xl font-semibold\">Media Library</h2>\n          <button\n            onClick={closeModal}\n            className=\"text-gray-500 hover:text-black transition\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        {/* Modal body layout */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-0\">\n          {/* Upload zone column */}\n          <div className=\"border-r p-4 bg-gray-50\">\n            <MediaUploadDropzone />\n          </div>\n\n          {/* Media grid display */}\n          <div className=\"col-span-3 p-4 overflow-y-auto max-h-[80vh]\">\n            <MediaGrid />\n          </div>\n        </div>\n      </div>\n    </Dialog>\n  )\n}\n"],"names":[],"mappings":"AAAA,iEAAiE;AACjE,yFAAyF;;;;;AAIzF;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AAUO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,oJAAA,CAAA,sBAAmB;IAE7D,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC,+KAAA,CAAA,SAAM;QACL,MAAM;QACN,SAAS;QACT,WAAU;;0BAGV,8OAAC;gBAAI,WAAU;;;;;;0BAGf,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,8OAAC;gCACC,SAAS;gCACT,WAAU;0CAEV,cAAA,8OAAC,4LAAA,CAAA,IAAC;oCAAC,WAAU;;;;;;;;;;;;;;;;;kCAKjB,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,mJAAA,CAAA,UAAmB;;;;;;;;;;0CAItB,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,yIAAA,CAAA,UAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMtB","debugId":null}},
    {"offset": {"line": 671, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/media/page.js"],"sourcesContent":["// File: /app/media/page.js\n// Description: Optional Media Dashboard page for viewing, testing, and managing media uploads via the global media manager\n\n'use client'\n\nimport React from 'react'\nimport { MediaManagerTrigger } from '@/app/media/MediaManager/MediaManagerTrigger'\nimport { MediaManagerModal } from '@/app/media/MediaManager/MediaManagerModal'\nimport { MediaManagerProvider } from '@/app/media/MediaManager/MediaManagerProvider'\n\nexport default function MediaPage() {\n  return (\n    // Wrap the entire page in the MediaManagerProvider to enable global modal usage\n    <MediaManagerProvider>\n      <div className=\"p-6 max-w-6xl mx-auto space-y-6\">\n        {/* Page Title */}\n        <h1 className=\"text-3xl font-bold\">Media Library</h1>\n\n        {/* Description */}\n        <p className=\"text-gray-600\">\n          This dashboard allows you to manage media uploads, deletions, and insertions using the WordPress Media Library API.\n        </p>\n\n        {/* Trigger button to open the media manager modal */}\n        <MediaManagerTrigger className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md\">\n          Open Media Library\n        </MediaManagerTrigger>\n\n        {/* The modal itself, controlled via context */}\n        <MediaManagerModal />\n      </div>\n    </MediaManagerProvider>\n  )\n}\n"],"names":[],"mappings":"AAAA,2BAA2B;AAC3B,2HAA2H;;;;;AAI3H;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,OACE,gFAAgF;kBAChF,8OAAC,oJAAA,CAAA,uBAAoB;kBACnB,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAG,WAAU;8BAAqB;;;;;;8BAGnC,8OAAC;oBAAE,WAAU;8BAAgB;;;;;;8BAK7B,8OAAC,mJAAA,CAAA,sBAAmB;oBAAC,WAAU;8BAAgE;;;;;;8BAK/F,8OAAC,iJAAA,CAAA,oBAAiB;;;;;;;;;;;;;;;;AAI1B","debugId":null}}]
}