{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/map/components/GeoStyles.js"],"sourcesContent":["// components/map/GeoStyles.js\n\nconst defaultGeoStyle = {\n    fill: \"#E5E7EB\",\n    stroke: \"#9CA3AF\",\n    strokeWidth: 0.5,\n    outline: \"none\",\n  };\n  \n  const hoverGeoStyle = {\n    fill: \"#60A5FA\",\n    stroke: \"#2563EB\",\n    outline: \"none\",\n  };\n  \n  const pressedGeoStyle = {\n    fill: \"#2563EB\",\n    outline: \"none\",\n  };\n  \n  export const mapStyles = {\n    default: defaultGeoStyle,\n    hover: hoverGeoStyle,\n    pressed: pressedGeoStyle,\n  };\n  "],"names":[],"mappings":"AAAA,8BAA8B;;;;AAE9B,MAAM,kBAAkB;IACpB,MAAM;IACN,QAAQ;IACR,aAAa;IACb,SAAS;AACX;AAEA,MAAM,gBAAgB;IACpB,MAAM;IACN,QAAQ;IACR,SAAS;AACX;AAEA,MAAM,kBAAkB;IACtB,MAAM;IACN,SAAS;AACX;AAEO,MAAM,YAAY;IACvB,SAAS;IACT,OAAO;IACP,SAAS;AACX","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/goldtome/Desktop/mothership/app/map/components/WorldMapView.js"],"sourcesContent":["// ✅ New: WorldMapView.js (flat map with animated pan + zoom transitions)\n\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { mapStyles } from \"@/app/map/components/GeoStyles\";\n\n// 🌍 World countries TopoJSON\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\";\n\n// 🔭 Define projection targets by region\nconst views = {\n  usa: { center: [-95, 38], scale: 800 },\n  west: { center: [-90, 15], scale: 400 },\n  east: { center: [60, 25], scale: 400 },\n  world: { center: [0, 20], scale: 300 },\n};\n\nconst ease = (start, end, step, totalSteps) =>\n  start + (end - start) * (step / totalSteps);\n\nconst WorldMapView = ({ activeRegion }) => {\n  const [viewState, setViewState] = useState(views.usa);\n  const [currentRegion, setCurrentRegion] = useState(\"usa\");\n\n  useEffect(() => {\n    if (!views[activeRegion] || activeRegion === currentRegion) return;\n\n    const from = views[currentRegion];\n    const to = views[activeRegion];\n    const steps = 30;\n    let step = 0;\n\n    const interval = setInterval(() => {\n      step++;\n      if (step > steps) {\n        clearInterval(interval);\n        setViewState(to);\n        setCurrentRegion(activeRegion);\n        return;\n      }\n\n      const nextCenter = [\n        ease(from.center[0], to.center[0], step, steps),\n        ease(from.center[1], to.center[1], step, steps),\n      ];\n      const nextScale = ease(from.scale, to.scale, step, steps);\n\n      setViewState({ center: nextCenter, scale: nextScale });\n    }, 16); // ~60fps\n\n    return () => clearInterval(interval);\n  }, [activeRegion, currentRegion]);\n\n  return (\n    <div style={{ width: \"100%\", margin: \"0 auto\" }}>\n      <ComposableMap\n        projection=\"geoMercator\"\n        projectionConfig={{\n          center: viewState.center,\n          scale: viewState.scale,\n        }}\n      >\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                style={mapStyles}\n              />\n            ))\n          }\n        </Geographies>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default WorldMapView;\n"],"names":[],"mappings":"AAAA,yEAAyE;;;;;AAGzE;AACA;AACA;AAJA;;;;;AAMA,8BAA8B;AAC9B,MAAM,SAAS;AAEf,yCAAyC;AACzC,MAAM,QAAQ;IACZ,KAAK;QAAE,QAAQ;YAAC,CAAC;YAAI;SAAG;QAAE,OAAO;IAAI;IACrC,MAAM;QAAE,QAAQ;YAAC,CAAC;YAAI;SAAG;QAAE,OAAO;IAAI;IACtC,MAAM;QAAE,QAAQ;YAAC;YAAI;SAAG;QAAE,OAAO;IAAI;IACrC,OAAO;QAAE,QAAQ;YAAC;YAAG;SAAG;QAAE,OAAO;IAAI;AACvC;AAEA,MAAM,OAAO,CAAC,OAAO,KAAK,MAAM,aAC9B,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,UAAU;AAE5C,MAAM,eAAe,CAAC,EAAE,YAAY,EAAE;IACpC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,GAAG;IACpD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,iBAAiB,eAAe;QAE5D,MAAM,OAAO,KAAK,CAAC,cAAc;QACjC,MAAM,KAAK,KAAK,CAAC,aAAa;QAC9B,MAAM,QAAQ;QACd,IAAI,OAAO;QAEX,MAAM,WAAW,YAAY;YAC3B;YACA,IAAI,OAAO,OAAO;gBAChB,cAAc;gBACd,aAAa;gBACb,iBAAiB;gBACjB;YACF;YAEA,MAAM,aAAa;gBACjB,KAAK,KAAK,MAAM,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,EAAE,EAAE,MAAM;gBACzC,KAAK,KAAK,MAAM,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,EAAE,EAAE,MAAM;aAC1C;YACD,MAAM,YAAY,KAAK,KAAK,KAAK,EAAE,GAAG,KAAK,EAAE,MAAM;YAEnD,aAAa;gBAAE,QAAQ;gBAAY,OAAO;YAAU;QACtD,GAAG,KAAK,SAAS;QAEjB,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;QAAc;KAAc;IAEhC,qBACE,8OAAC;QAAI,OAAO;YAAE,OAAO;YAAQ,QAAQ;QAAS;kBAC5C,cAAA,8OAAC,8JAAA,CAAA,gBAAa;YACZ,YAAW;YACX,kBAAkB;gBAChB,QAAQ,UAAU,MAAM;gBACxB,OAAO,UAAU,KAAK;YACxB;sBAEA,cAAA,8OAAC,8JAAA,CAAA,cAAW;gBAAC,WAAW;0BACrB,CAAC,EAAE,WAAW,EAAE,GACf,YAAY,GAAG,CAAC,CAAC,oBACf,8OAAC,8JAAA,CAAA,YAAS;4BAER,WAAW;4BACX,OAAO,qIAAA,CAAA,YAAS;2BAFX,IAAI,MAAM;;;;;;;;;;;;;;;;;;;;AAU/B;uCAEe","debugId":null}}]
}